---
import { Product } from '../../productRepository';
import CloseIcon from '../CloseIcon.astro';
import ProductFormFields from './ProductFormFields.astro';

interface Props {
    product: Product;
}

const { product } = Astro.props;

const productAvailable = false;
---

<div
    id="drop-secret-cart"
    data-modal-backdrop="static"
    tabindex="-1"
    aria-hidden="true"
    class="fixed left-0 right-0 top-0 z-50 hidden h-[calc(100%-1rem)] max-h-full w-full overflow-y-auto overflow-x-hidden p-4 md:inset-0"
>
    <div class="relative max-h-full w-full max-w-2xl">
        <div class="relative rounded-lg bg-white shadow dark:bg-gray-700">
            <div class="flex items-start justify-between rounded-t border-b p-4 dark:border-gray-600">
                <h3 class="text-xl">Sekretny zakup</h3>
                <button type="button" class="ml-auto inline-flex h-6 w-6 items-center justify-center" data-modal-hide="drop-secret-cart">
                    <CloseIcon />
                    <span class="sr-only">Zamknij</span>
                </button>
            </div>
            <div class="space-y-6 p-6">
                <div class="min-w-xs relative max-h-full w-full max-w-2xl overflow-y-auto">
                    <div class="md:mx-auto md:flex md:place-items-center md:items-center md:space-x-6 lg:block lg:space-x-0 2xl:flex 2xl:space-x-6">
                        {productAvailable ? <ProductFormFields product={product} /> : 'Produkt nie jest dostępny.'}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="md:mx-auto md:flex md:place-items-center md:items-center md:space-x-6 lg:block lg:space-x-0 2xl:flex 2xl:space-x-6">
    <div class="my-4 text-center">
        <button data-modal-target="drop-secret-cart" data-modal-toggle="drop-secret-cart" class="cursor-default" type="button"> Drop zakończony.</button>
    </div>
</div>
